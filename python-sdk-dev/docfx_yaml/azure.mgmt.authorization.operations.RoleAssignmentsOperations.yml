api_name: []
items:
- _type: class
  children:
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.create
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.create_by_id
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete_by_id
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.get
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.get_by_id
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.list
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource_group
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_scope
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  inheritance:
  - builtins.object
  module: azure.mgmt.authorization.operations
  name: RoleAssignmentsOperations
  source:
    id: RoleAssignmentsOperations
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 19
  summary: 'RoleAssignmentsOperations operations.


    :param client: Client for service requests.

    :param config: Configuration of service client.

    :param serializer: An object model serializer.

    :param deserializer: An objec model deserializer.'
  type: Class
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations
- _type: method
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create
  module: azure.mgmt.authorization.operations
  name: create
  source:
    id: create
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 258
  summary: "Creates a role assignment.\n\n:param scope: The scope of the role assignment\
    \ to create. The scope\n can be any REST resource instance. For example, use\n\
    \ '/subscriptions/{subscription-id}/' for a subscription,\n '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'\n\
    \ for a resource group, and\n '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'\n\
    \ for a resource.\n:type scope: str\n:param role_assignment_name: The name of\
    \ the role assignment to\n create. It can be any valid GUID.\n:type role_assignment_name:\
    \ str\n:param properties: Role assignment properties.\n:type properties: :class:`RoleAssignmentProperties\n\
    \ <azure.mgmt.authorization.models.RoleAssignmentProperties>`\n:param dict custom_headers:\
    \ headers that will be added to the request\n:param bool raw: returns the direct\
    \ response alongside the\n deserialized response\n:param operation_config: :ref:`Operation\
    \ configuration\n overrides<msrest:optionsforoperations>`.\n:rtype: :class:`RoleAssignment\n\
    \ <azure.mgmt.authorization.models.RoleAssignment>`\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`"
  type: Method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create
- _type: method
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create_by_id
  module: azure.mgmt.authorization.operations
  name: create_by_id
  source:
    id: create_by_id
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 454
  summary: "Creates a role assignment by ID.\n\n:param role_assignment_id: The ID\
    \ of the role assignment to create.\n:type role_assignment_id: str\n:param properties:\
    \ Role assignment properties.\n:type properties: :class:`RoleAssignmentProperties\n\
    \ <azure.mgmt.authorization.models.RoleAssignmentProperties>`\n:param dict custom_headers:\
    \ headers that will be added to the request\n:param bool raw: returns the direct\
    \ response alongside the\n deserialized response\n:param operation_config: :ref:`Operation\
    \ configuration\n overrides<msrest:optionsforoperations>`.\n:rtype: :class:`RoleAssignment\n\
    \ <azure.mgmt.authorization.models.RoleAssignment>`\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`"
  type: Method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create_by_id
- _type: method
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete
  module: azure.mgmt.authorization.operations
  name: delete
  source:
    id: delete
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 196
  summary: "Deletes a role assignment.\n\n:param scope: The scope of the role assignment\
    \ to delete.\n:type scope: str\n:param role_assignment_name: The name of the role\
    \ assignment to\n delete.\n:type role_assignment_name: str\n:param dict custom_headers:\
    \ headers that will be added to the request\n:param bool raw: returns the direct\
    \ response alongside the\n deserialized response\n:param operation_config: :ref:`Operation\
    \ configuration\n overrides<msrest:optionsforoperations>`.\n:rtype: :class:`RoleAssignment\n\
    \ <azure.mgmt.authorization.models.RoleAssignment>`\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`"
  type: Method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete
- _type: method
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete_by_id
  module: azure.mgmt.authorization.operations
  name: delete_by_id
  source:
    id: delete_by_id
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 396
  summary: "Deletes a role assignment.\n\n:param role_assignment_id: The ID of the\
    \ role assignment to delete.\n:type role_assignment_id: str\n:param dict custom_headers:\
    \ headers that will be added to the request\n:param bool raw: returns the direct\
    \ response alongside the\n deserialized response\n:param operation_config: :ref:`Operation\
    \ configuration\n overrides<msrest:optionsforoperations>`.\n:rtype: :class:`RoleAssignment\n\
    \ <azure.mgmt.authorization.models.RoleAssignment>`\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`"
  type: Method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete_by_id
- _type: method
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get
  module: azure.mgmt.authorization.operations
  name: get
  source:
    id: get
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 335
  summary: "Get the specified role assignment.\n\n:param scope: The scope of the role\
    \ assignment.\n:type scope: str\n:param role_assignment_name: The name of the\
    \ role assignment to get.\n:type role_assignment_name: str\n:param dict custom_headers:\
    \ headers that will be added to the request\n:param bool raw: returns the direct\
    \ response alongside the\n deserialized response\n:param operation_config: :ref:`Operation\
    \ configuration\n overrides<msrest:optionsforoperations>`.\n:rtype: :class:`RoleAssignment\n\
    \ <azure.mgmt.authorization.models.RoleAssignment>`\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`"
  type: Method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get
- _type: method
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get_by_id
  module: azure.mgmt.authorization.operations
  name: get_by_id
  source:
    id: get_by_id
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 521
  summary: "Gets a role assignment by ID.\n\n:param role_assignment_id: The ID of\
    \ the role assignment to get.\n:type role_assignment_id: str\n:param dict custom_headers:\
    \ headers that will be added to the request\n:param bool raw: returns the direct\
    \ response alongside the\n deserialized response\n:param operation_config: :ref:`Operation\
    \ configuration\n overrides<msrest:optionsforoperations>`.\n:rtype: :class:`RoleAssignment\n\
    \ <azure.mgmt.authorization.models.RoleAssignment>`\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`"
  type: Method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get_by_id
- _type: method
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list
  module: azure.mgmt.authorization.operations
  name: list
  source:
    id: list
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 579
  summary: "Gets all role assignments for the subscription.\n\n:param filter: The\
    \ filter to apply on the operation. Use\n $filter=atScope() to return all role\
    \ assignments at or above the\n scope. Use $filter=principalId eq {id} to return\
    \ all role\n assignments at, above or below the scope for the specified principal.\n\
    :type filter: str\n:param dict custom_headers: headers that will be added to the\
    \ request\n:param bool raw: returns the direct response alongside the\n deserialized\
    \ response\n:param operation_config: :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n\
    :rtype: :class:`RoleAssignmentPaged\n <azure.mgmt.authorization.models.RoleAssignmentPaged>`\n\
    :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`"
  type: Method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list
- _type: method
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource
  module: azure.mgmt.authorization.operations
  name: list_for_resource
  source:
    id: list_for_resource
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 36
  summary: "Gets role assignments for a resource.\n\n:param resource_group_name: The\
    \ name of the resource group.\n:type resource_group_name: str\n:param resource_provider_namespace:\
    \ The namespace of the resource\n provider.\n:type resource_provider_namespace:\
    \ str\n:param parent_resource_path: The parent resource identity.\n:type parent_resource_path:\
    \ str\n:param resource_type: The resource type of the resource.\n:type resource_type:\
    \ str\n:param resource_name: The name of the resource to get role\n assignments\
    \ for.\n:type resource_name: str\n:param filter: The filter to apply on the operation.\
    \ Use\n $filter=atScope() to return all role assignments at or above the\n scope.\
    \ Use $filter=principalId eq {id} to return all role\n assignments at, above or\
    \ below the scope for the specified principal.\n:type filter: str\n:param dict\
    \ custom_headers: headers that will be added to the request\n:param bool raw:\
    \ returns the direct response alongside the\n deserialized response\n:param operation_config:\
    \ :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n:rtype:\
    \ :class:`RoleAssignmentPaged\n <azure.mgmt.authorization.models.RoleAssignmentPaged>`\n\
    :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`"
  type: Method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource
- _type: method
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource_group
  module: azure.mgmt.authorization.operations
  name: list_for_resource_group
  source:
    id: list_for_resource_group
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 123
  summary: "Gets role assignments for a resource group.\n\n:param resource_group_name:\
    \ The name of the resource group.\n:type resource_group_name: str\n:param filter:\
    \ The filter to apply on the operation. Use\n $filter=atScope() to return all\
    \ role assignments at or above the\n scope. Use $filter=principalId eq {id} to\
    \ return all role\n assignments at, above or below the scope for the specified\
    \ principal.\n:type filter: str\n:param dict custom_headers: headers that will\
    \ be added to the request\n:param bool raw: returns the direct response alongside\
    \ the\n deserialized response\n:param operation_config: :ref:`Operation configuration\n\
    \ overrides<msrest:optionsforoperations>`.\n:rtype: :class:`RoleAssignmentPaged\n\
    \ <azure.mgmt.authorization.models.RoleAssignmentPaged>`\n:raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`"
  type: Method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource_group
- _type: method
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_scope
  module: azure.mgmt.authorization.operations
  name: list_for_scope
  source:
    id: list_for_scope
    path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization/azure/mgmt/authorization/operations/role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 649
  summary: "Gets role assignments for a scope.\n\n:param scope: The scope of the role\
    \ assignments.\n:type scope: str\n:param filter: The filter to apply on the operation.\
    \ Use\n $filter=atScope() to return all role assignments at or above the\n scope.\
    \ Use $filter=principalId eq {id} to return all role\n assignments at, above or\
    \ below the scope for the specified principal.\n:type filter: str\n:param dict\
    \ custom_headers: headers that will be added to the request\n:param bool raw:\
    \ returns the direct response alongside the\n deserialized response\n:param operation_config:\
    \ :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n:rtype:\
    \ :class:`RoleAssignmentPaged\n <azure.mgmt.authorization.models.RoleAssignmentPaged>`\n\
    :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`"
  type: Method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_scope

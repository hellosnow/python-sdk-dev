api_name: []
items:
- _type: class
  children: []
  class: azure.batch.models.JobAddParameter
  fullName: azure.batch.models.JobAddParameter
  inheritance:
  - msrest.serialization.Model
  - builtins.object
  module: azure.batch.models
  name: JobAddParameter
  source:
    id: JobAddParameter
    path: Users/eric/.virtualenvs/sphinx-docfx-yaml/lib/python3.5/site-packages/azure/batch/models/job_add_parameter.py
    remote:
      branch: master
      path: Users/eric/.virtualenvs/sphinx-docfx-yaml/lib/python3.5/site-packages/azure/batch/models/job_add_parameter.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 15
  summary: "An Azure Batch job to add.\n\n:param id: A string that uniquely identifies\
    \ the job within the account.\n The id can contain any combination of alphanumeric\
    \ characters including\n hyphens and underscores, and cannot contain more than\
    \ 64 characters. It\n is common to use a GUID for the id.\n:type id: str\n:param\
    \ display_name: The display name for the job.\n:type display_name: str\n:param\
    \ priority: The priority of the job.  Priority values can range from\n -1000 to\
    \ 1000, with -1000 being the lowest priority and 1000 being the\n highest priority.\
    \ The default value is 0.\n:type priority: int\n:param constraints: The execution\
    \ constraints for the job.\n:type constraints: :class:`JobConstraints\n <azure.batch.models.JobConstraints>`\n\
    :param job_manager_task: Details of a Job Manager task to be launched\n when the\
    \ job is started.\n:type job_manager_task: :class:`JobManagerTask\n <azure.batch.models.JobManagerTask>`\n\
    :param job_preparation_task: The Job Preparation task.\n:type job_preparation_task:\
    \ :class:`JobPreparationTask\n <azure.batch.models.JobPreparationTask>`\n:param\
    \ job_release_task: The Job Release task.\n:type job_release_task: :class:`JobReleaseTask\n\
    \ <azure.batch.models.JobReleaseTask>`\n:param common_environment_settings: The\
    \ list of common environment\n variable settings. These environment variables\
    \ are set for all tasks in\n the job (including the Job Manager, Job Preparation\
    \ and Job Release\n tasks).\n:type common_environment_settings: list of :class:`EnvironmentSetting\n\
    \ <azure.batch.models.EnvironmentSetting>`\n:param pool_info: The pool on which\
    \ the Batch service runs the job's\n tasks.\n:type pool_info: :class:`PoolInformation\n\
    \ <azure.batch.models.PoolInformation>`\n:param on_all_tasks_complete: The action\
    \ the Batch service should take\n when all tasks in the job are in the completed\
    \ state. Possible values\n include: 'noAction', 'terminateJob'\n:type on_all_tasks_complete:\
    \ str or :class:`OnAllTasksComplete\n <azure.batch.models.OnAllTasksComplete>`\n\
    :param on_task_failure: The action the Batch service should take when any\n task\
    \ in the job fails. A task is considered to have failed if it\n completes with\
    \ a non-zero exit code and has exhausted its retry count,\n or if it had a scheduling\
    \ error. Possible values include: 'noAction',\n 'performExitOptionsJobAction'\n\
    :type on_task_failure: str or :class:`OnTaskFailure\n <azure.batch.models.OnTaskFailure>`\n\
    :param metadata: A list of name-value pairs associated with the job as\n metadata.\n\
    :type metadata: list of :class:`MetadataItem\n <azure.batch.models.MetadataItem>`\n\
    :param uses_task_dependencies: The flag that determines if this job will\n use\
    \ tasks with dependencies.\n:type uses_task_dependencies: bool"
  type: Class
  uid: azure.batch.models.JobAddParameter

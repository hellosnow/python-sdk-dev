items:
- _type: module
  children:
  - azure.mgmt.servicebus.models.Resource
  - azure.mgmt.servicebus.models.NamespaceCreateOrUpdateParameters
  - azure.mgmt.servicebus.models.Sku
  - azure.mgmt.servicebus.models.NamespaceResource
  - azure.mgmt.servicebus.models.SharedAccessAuthorizationRuleCreateOrUpdateParameters
  - azure.mgmt.servicebus.models.SharedAccessAuthorizationRuleResource
  - azure.mgmt.servicebus.models.ResourceListKeys
  - azure.mgmt.servicebus.models.RegenerateKeysParameters
  - azure.mgmt.servicebus.models.QueueCreateOrUpdateParameters
  - azure.mgmt.servicebus.models.MessageCountDetails
  - azure.mgmt.servicebus.models.QueueResource
  - azure.mgmt.servicebus.models.TopicCreateOrUpdateParameters
  - azure.mgmt.servicebus.models.TopicResource
  - azure.mgmt.servicebus.models.SubscriptionCreateOrUpdateParameters
  - azure.mgmt.servicebus.models.SubscriptionResource
  - azure.mgmt.servicebus.models.NamespaceResourcePaged
  - azure.mgmt.servicebus.models.SharedAccessAuthorizationRuleResourcePaged
  - azure.mgmt.servicebus.models.QueueResourcePaged
  - azure.mgmt.servicebus.models.TopicResourcePaged
  - azure.mgmt.servicebus.models.SubscriptionResourcePaged
  - azure.mgmt.servicebus.models.SkuName
  - azure.mgmt.servicebus.models.SkuTier
  - azure.mgmt.servicebus.models.NamespaceState
  - azure.mgmt.servicebus.models.AccessRights
  - azure.mgmt.servicebus.models.Policykey
  - azure.mgmt.servicebus.models.EntityAvailabilityStatus
  - azure.mgmt.servicebus.models.EntityStatus
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models
  summary: ''
  type: Namespace
  uid: azure.mgmt.servicebus.models
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.Resource
  summary: 'Resource.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    :ivar id: Resource Id

    :vartype id: str

    :ivar name: Resource name

    :vartype name: str

    :ivar type: Resource type

    :vartype type: str

    :param location: Resource location

    :type location: str

    :param tags: Resource tags

    :type tags: dict

    '
  type: Class
  uid: azure.mgmt.servicebus.models.Resource
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.NamespaceCreateOrUpdateParameters
  summary: "Parameters supplied to the Create Or Update Namespace operation.\n\n:param\
    \ location: Namespace location.\n:type location: str\n:param sku:\n:type sku:\
    \ :class:`Sku <azure.mgmt.servicebus.models.Sku>`\n:param tags: Namespace tags.\n\
    :type tags: dict\n:param provisioning_state: Provisioning state of the namespace.\n\
    :type provisioning_state: str\n:param status: State of the namespace. Possible\
    \ values include:\n 'Unknown', 'Creating', 'Created', 'Activating', 'Enabling',\
    \ 'Active',\n 'Disabling', 'Disabled', 'SoftDeleting', 'SoftDeleted', 'Removing',\n\
    \ 'Removed', 'Failed'\n:type status: str or :class:`NamespaceState\n <azure.mgmt.servicebus.models.NamespaceState>`\n\
    :param created_at: The time the namespace was created.\n:type created_at: datetime\n\
    :param updated_at: The time the namespace was updated.\n:type updated_at: datetime\n\
    :param service_bus_endpoint: Endpoint you can use to perform Service Bus\n operations.\n\
    :type service_bus_endpoint: str\n:param create_acs_namespace: Indicates whether\
    \ to create an ACS namespace.\n:type create_acs_namespace: bool\n:param enabled:\
    \ Specifies whether this instance is enabled.\n:type enabled: bool\n"
  type: Class
  uid: azure.mgmt.servicebus.models.NamespaceCreateOrUpdateParameters
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.Sku
  summary: "SKU of the namespace.\n\n:param name: Name of this SKU. Possible values\
    \ include: 'Basic',\n 'Standard', 'Premium'\n:type name: str or :class:`SkuName\
    \ <azure.mgmt.servicebus.models.SkuName>`\n:param tier: The billing tier of this\
    \ particular SKU. Possible values\n include: 'Basic', 'Standard', 'Premium'\n\
    :type tier: str or :class:`SkuTier <azure.mgmt.servicebus.models.SkuTier>`\n:param\
    \ capacity: The specified messaging units for the tier.\n:type capacity: int\n"
  type: Class
  uid: azure.mgmt.servicebus.models.Sku
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.NamespaceResource
  summary: "Description of a namespace resource.\n\nVariables are only populated by\
    \ the server, and will be ignored when\nsending a request.\n\n:ivar id: Resource\
    \ Id\n:vartype id: str\n:ivar name: Resource name\n:vartype name: str\n:ivar type:\
    \ Resource type\n:vartype type: str\n:param location: Resource location\n:type\
    \ location: str\n:param tags: Resource tags\n:type tags: dict\n:param sku:\n:type\
    \ sku: :class:`Sku <azure.mgmt.servicebus.models.Sku>`\n:param provisioning_state:\
    \ Provisioning state of the namespace.\n:type provisioning_state: str\n:param\
    \ status: State of the namespace. Possible values include:\n 'Unknown', 'Creating',\
    \ 'Created', 'Activating', 'Enabling', 'Active',\n 'Disabling', 'Disabled', 'SoftDeleting',\
    \ 'SoftDeleted', 'Removing',\n 'Removed', 'Failed'\n:type status: str or :class:`NamespaceState\n\
    \ <azure.mgmt.servicebus.models.NamespaceState>`\n:param created_at: The time\
    \ the namespace was created.\n:type created_at: datetime\n:param updated_at: The\
    \ time the namespace was updated.\n:type updated_at: datetime\n:param service_bus_endpoint:\
    \ Endpoint you can use to perform Service Bus\n operations.\n:type service_bus_endpoint:\
    \ str\n:param create_acs_namespace: Indicates whether to create an ACS namespace.\n\
    :type create_acs_namespace: bool\n:param enabled: Specifies whether this instance\
    \ is enabled.\n:type enabled: bool\n"
  type: Class
  uid: azure.mgmt.servicebus.models.NamespaceResource
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.SharedAccessAuthorizationRuleCreateOrUpdateParameters
  summary: "Parameters supplied to the Create Or Update Authorization Rules operation.\n\
    \n:param location: data center location.\n:type location: str\n:param name: Name\
    \ of the authorization rule.\n:type name: str\n:param rights: The rights associated\
    \ with the rule.\n:type rights: list of str or :class:`AccessRights\n <azure.mgmt.servicebus.models.AccessRights>`\n"
  type: Class
  uid: azure.mgmt.servicebus.models.SharedAccessAuthorizationRuleCreateOrUpdateParameters
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.SharedAccessAuthorizationRuleResource
  summary: "Description of a namespace authorization rule.\n\nVariables are only populated\
    \ by the server, and will be ignored when\nsending a request.\n\n:ivar id: Resource\
    \ Id\n:vartype id: str\n:ivar name: Resource name\n:vartype name: str\n:ivar type:\
    \ Resource type\n:vartype type: str\n:param location: Resource location\n:type\
    \ location: str\n:param tags: Resource tags\n:type tags: dict\n:param rights:\
    \ The rights associated with the rule.\n:type rights: list of str or :class:`AccessRights\n\
    \ <azure.mgmt.servicebus.models.AccessRights>`\n"
  type: Class
  uid: azure.mgmt.servicebus.models.SharedAccessAuthorizationRuleResource
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.ResourceListKeys
  summary: "Namespace/ServiceBus Connection String.\n\n:param primary_connection_string:\
    \ Primary connection string of the\n created namespace authorization rule.\n:type\
    \ primary_connection_string: str\n:param secondary_connection_string: Secondary\
    \ connection string of the\n created namespace authorization rule.\n:type secondary_connection_string:\
    \ str\n:param primary_key: A base64-encoded 256-bit primary key for signing and\n\
    \ validating the SAS token.\n:type primary_key: str\n:param secondary_key: A base64-encoded\
    \ 256-bit primary key for signing\n and validating the SAS token.\n:type secondary_key:\
    \ str\n:param key_name: A string that describes the authorization rule.\n:type\
    \ key_name: str\n"
  type: Class
  uid: azure.mgmt.servicebus.models.ResourceListKeys
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.RegenerateKeysParameters
  summary: "Parameters supplied to the Regenerate Authorization Rule operation.\n\n\
    :param policykey: Key that needs to be regenerated. Possible values\n include:\
    \ 'PrimaryKey', 'SecondaryKey'\n:type policykey: str or :class:`Policykey\n <azure.mgmt.servicebus.models.Policykey>`\n"
  type: Class
  uid: azure.mgmt.servicebus.models.RegenerateKeysParameters
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.QueueCreateOrUpdateParameters
  summary: "Parameters supplied to the Create Or Update Queue operation.\n\n:param\
    \ name: Queue name.\n:type name: str\n:param location: location of the resource.\n\
    :type location: str\n:param lock_duration: The duration of a peek-lock; that is,\
    \ the amount of\n time that the message is locked for other receivers. The maximum\
    \ value\n for LockDuration is 5 minutes; the default value is 1 minute.\n:type\
    \ lock_duration: str\n:param accessed_at: Last time a message was sent, or the\
    \ last time there\n was a receive request to this queue.\n:type accessed_at: datetime\n\
    :param auto_delete_on_idle: the TimeSpan idle interval after which the\n queue\
    \ is automatically deleted. The minimum duration is 5 minutes.\n:type auto_delete_on_idle:\
    \ str\n:param entity_availability_status: Entity availability status for the\n\
    \ queue. Possible values include: 'Available', 'Limited', 'Renaming',\n 'Restoring',\
    \ 'Unknown'\n:type entity_availability_status: str or :class:`EntityAvailabilityStatus\n\
    \ <azure.mgmt.servicebus.models.EntityAvailabilityStatus>`\n:param created_at:\
    \ The exact time the message was created.\n:type created_at: datetime\n:param\
    \ default_message_time_to_live: The default message time to live\n value. This\
    \ is the duration after which the message expires, starting\n from when the message\
    \ is sent to Service Bus. This is the default value\n used when TimeToLive is\
    \ not set on a message itself.\n:type default_message_time_to_live: str\n:param\
    \ duplicate_detection_history_time_window: TimeSpan structure that\n defines the\
    \ duration of the duplicate detection history. The default\n value is 10 minutes.\n\
    :type duplicate_detection_history_time_window: str\n:param enable_batched_operations:\
    \ A value that indicates whether\n server-side batched operations are enabled.\n\
    :type enable_batched_operations: bool\n:param dead_lettering_on_message_expiration:\
    \ A value that indicates\n whether this queue has dead letter support when a message\
    \ expires.\n:type dead_lettering_on_message_expiration: bool\n:param enable_express:\
    \ A value that indicates whether Express Entities\n are enabled. An express queue\
    \ holds a message in memory temporarily\n before writing it to persistent storage.\n\
    :type enable_express: bool\n:param enable_partitioning: A value that indicates\
    \ whether the queue is\n to be partitioned across multiple message brokers.\n\
    :type enable_partitioning: bool\n:param is_anonymous_accessible: A value that\
    \ indicates whether the\n message is accessible anonymously.\n:type is_anonymous_accessible:\
    \ bool\n:param max_delivery_count: The maximum delivery count. A message is\n\
    \ automatically deadlettered after this number of deliveries.\n:type max_delivery_count:\
    \ int\n:param max_size_in_megabytes: The maximum size of the queue in megabytes,\n\
    \ which is the size of memory allocated for the queue.\n:type max_size_in_megabytes:\
    \ long\n:param message_count: The number of messages in the queue.\n:type message_count:\
    \ long\n:param count_details:\n:type count_details: :class:`MessageCountDetails\n\
    \ <azure.mgmt.servicebus.models.MessageCountDetails>`\n:param requires_duplicate_detection:\
    \ A value indicating if this queue\n requires duplicate detection.\n:type requires_duplicate_detection:\
    \ bool\n:param requires_session: A value that indicates whether the queue\n supports\
    \ the concept of sessions.\n:type requires_session: bool\n:param size_in_bytes:\
    \ The size of the queue, in bytes.\n:type size_in_bytes: long\n:param status:\
    \ Enumerates the possible values for the status of a\n messaging entity. Possible\
    \ values include: 'Active', 'Creating',\n 'Deleting', 'Disabled', 'ReceiveDisabled',\
    \ 'Renaming', 'Restoring',\n 'SendDisabled', 'Unknown'\n:type status: str or :class:`EntityStatus\n\
    \ <azure.mgmt.servicebus.models.EntityStatus>`\n:param support_ordering: A value\
    \ that indicates whether the queue\n supports ordering.\n:type support_ordering:\
    \ bool\n:param updated_at: The exact time the message was updated.\n:type updated_at:\
    \ datetime\n"
  type: Class
  uid: azure.mgmt.servicebus.models.QueueCreateOrUpdateParameters
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.MessageCountDetails
  summary: "Message Count Details.\n\n:param active_message_count: Number of active\
    \ messages in the queue,\n topic, or subscription.\n:type active_message_count:\
    \ long\n:param dead_letter_message_count: Number of messages that are dead\n lettered.\n\
    :type dead_letter_message_count: long\n:param scheduled_message_count: Number\
    \ of scheduled messages.\n:type scheduled_message_count: long\n:param transfer_dead_letter_message_count:\
    \ Number of messages transferred\n into dead letters.\n:type transfer_dead_letter_message_count:\
    \ long\n:param transfer_message_count: Number of messages transferred to another\n\
    \ queue, topic, or subscription.\n:type transfer_message_count: long\n"
  type: Class
  uid: azure.mgmt.servicebus.models.MessageCountDetails
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.QueueResource
  summary: "Description of queue Resource.\n\nVariables are only populated by the\
    \ server, and will be ignored when\nsending a request.\n\n:ivar id: Resource Id\n\
    :vartype id: str\n:ivar name: Resource name\n:vartype name: str\n:ivar type: Resource\
    \ type\n:vartype type: str\n:param location: Resource location\n:type location:\
    \ str\n:param tags: Resource tags\n:type tags: dict\n:param lock_duration: The\
    \ duration of a peek-lock; that is, the amount of\n time that the message is locked\
    \ for other receivers. The maximum value\n for LockDuration is 5 minutes; the\
    \ default value is 1 minute.\n:type lock_duration: str\n:param accessed_at: Last\
    \ time a message was sent, or the last time there\n was a receive request to this\
    \ queue.\n:type accessed_at: datetime\n:param auto_delete_on_idle: the TimeSpan\
    \ idle interval after which the\n queue is automatically deleted. The minimum\
    \ duration is 5 minutes.\n:type auto_delete_on_idle: str\n:param entity_availability_status:\
    \ Entity availability status for the\n queue. Possible values include: 'Available',\
    \ 'Limited', 'Renaming',\n 'Restoring', 'Unknown'\n:type entity_availability_status:\
    \ str or :class:`EntityAvailabilityStatus\n <azure.mgmt.servicebus.models.EntityAvailabilityStatus>`\n\
    :param created_at: The exact time the message was created.\n:type created_at:\
    \ datetime\n:param default_message_time_to_live: The default message time to live\n\
    \ value. This is the duration after which the message expires, starting\n from\
    \ when the message is sent to Service Bus. This is the default value\n used when\
    \ TimeToLive is not set on a message itself.\n:type default_message_time_to_live:\
    \ str\n:param duplicate_detection_history_time_window: TimeSpan structure that\n\
    \ defines the duration of the duplicate detection history. The default\n value\
    \ is 10 minutes.\n:type duplicate_detection_history_time_window: str\n:param enable_batched_operations:\
    \ A value that indicates whether\n server-side batched operations are enabled.\n\
    :type enable_batched_operations: bool\n:param dead_lettering_on_message_expiration:\
    \ A value that indicates\n whether this queue has dead letter support when a message\
    \ expires.\n:type dead_lettering_on_message_expiration: bool\n:param enable_express:\
    \ A value that indicates whether Express Entities\n are enabled. An express queue\
    \ holds a message in memory temporarily\n before writing it to persistent storage.\n\
    :type enable_express: bool\n:param enable_partitioning: A value that indicates\
    \ whether the queue is\n to be partitioned across multiple message brokers.\n\
    :type enable_partitioning: bool\n:param is_anonymous_accessible: A value that\
    \ indicates whether the\n message is accessible anonymously.\n:type is_anonymous_accessible:\
    \ bool\n:param max_delivery_count: The maximum delivery count. A message is\n\
    \ automatically deadlettered after this number of deliveries.\n:type max_delivery_count:\
    \ int\n:param max_size_in_megabytes: The maximum size of the queue in megabytes,\n\
    \ which is the size of memory allocated for the queue.\n:type max_size_in_megabytes:\
    \ long\n:param message_count: The number of messages in the queue.\n:type message_count:\
    \ long\n:param count_details:\n:type count_details: :class:`MessageCountDetails\n\
    \ <azure.mgmt.servicebus.models.MessageCountDetails>`\n:param requires_duplicate_detection:\
    \ A value indicating if this queue\n requires duplicate detection.\n:type requires_duplicate_detection:\
    \ bool\n:param requires_session: A value that indicates whether the queue\n supports\
    \ the concept of sessions.\n:type requires_session: bool\n:param size_in_bytes:\
    \ The size of the queue, in bytes.\n:type size_in_bytes: long\n:param status:\
    \ Enumerates the possible values for the status of a\n messaging entity. Possible\
    \ values include: 'Active', 'Creating',\n 'Deleting', 'Disabled', 'ReceiveDisabled',\
    \ 'Renaming', 'Restoring',\n 'SendDisabled', 'Unknown'\n:type status: str or :class:`EntityStatus\n\
    \ <azure.mgmt.servicebus.models.EntityStatus>`\n:param support_ordering: A value\
    \ that indicates whether the queue\n supports ordering.\n:type support_ordering:\
    \ bool\n:param updated_at: The exact time the message was updated.\n:type updated_at:\
    \ datetime\n"
  type: Class
  uid: azure.mgmt.servicebus.models.QueueResource
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.TopicCreateOrUpdateParameters
  summary: "Parameters supplied to the Create Or Update Topic operation.\n\n:param\
    \ name: Topic name.\n:type name: str\n:param location: Location of the resource.\n\
    :type location: str\n:param accessed_at: Last time the message was sent, or a\
    \ request was\n received, for this topic.\n:type accessed_at: datetime\n:param\
    \ auto_delete_on_idle: TimeSpan idle interval after which the topic\n is automatically\
    \ deleted. The minimum duration is 5 minutes.\n:type auto_delete_on_idle: str\n\
    :param entity_availability_status: Entity availability status for the\n topic.\
    \ Possible values include: 'Available', 'Limited', 'Renaming',\n 'Restoring',\
    \ 'Unknown'\n:type entity_availability_status: str or :class:`EntityAvailabilityStatus\n\
    \ <azure.mgmt.servicebus.models.EntityAvailabilityStatus>`\n:param created_at:\
    \ Exact time the message was created.\n:type created_at: datetime\n:param count_details:\n\
    :type count_details: :class:`MessageCountDetails\n <azure.mgmt.servicebus.models.MessageCountDetails>`\n\
    :param default_message_time_to_live: Default message time to live value.\n This\
    \ is the duration after which the message expires, starting from when\n the message\
    \ is sent to Service Bus. This is the default value used when\n TimeToLive is\
    \ not set on a message itself.\n:type default_message_time_to_live: str\n:param\
    \ duplicate_detection_history_time_window: TimeSpan structure that\n defines the\
    \ duration of the duplicate detection history. The default\n value is 10 minutes.\n\
    :type duplicate_detection_history_time_window: str\n:param enable_batched_operations:\
    \ Value that indicates whether\n server-side batched operations are enabled.\n\
    :type enable_batched_operations: bool\n:param enable_express: Value that indicates\
    \ whether Express Entities are\n enabled. An express topic holds a message in\
    \ memory temporarily before\n writing it to persistent storage.\n:type enable_express:\
    \ bool\n:param enable_partitioning: Value that indicates whether the topic to\
    \ be\n partitioned across multiple message brokers is enabled.\n:type enable_partitioning:\
    \ bool\n:param enable_subscription_partitioning: Value that indicates whether\n\
    \ partitioning is enabled or disabled.\n:type enable_subscription_partitioning:\
    \ bool\n:param filtering_messages_before_publishing: Whether messages should be\n\
    \ filtered before publishing.\n:type filtering_messages_before_publishing: bool\n\
    :param is_anonymous_accessible: Value that indicates whether the message\n is\
    \ accessible anonymously.\n:type is_anonymous_accessible: bool\n:param is_express:\n\
    :type is_express: bool\n:param max_size_in_megabytes: Maximum size of the topic\
    \ in megabytes,\n which is the size of the memory allocated for the topic.\n:type\
    \ max_size_in_megabytes: long\n:param requires_duplicate_detection: Value indicating\
    \ if this topic\n requires duplicate detection.\n:type requires_duplicate_detection:\
    \ bool\n:param size_in_bytes: Size of the topic, in bytes.\n:type size_in_bytes:\
    \ long\n:param status: Enumerates the possible values for the status of a\n messaging\
    \ entity. Possible values include: 'Active', 'Creating',\n 'Deleting', 'Disabled',\
    \ 'ReceiveDisabled', 'Renaming', 'Restoring',\n 'SendDisabled', 'Unknown'\n:type\
    \ status: str or :class:`EntityStatus\n <azure.mgmt.servicebus.models.EntityStatus>`\n\
    :param subscription_count: Number of subscriptions.\n:type subscription_count:\
    \ int\n:param support_ordering: Value that indicates whether the topic supports\n\
    \ ordering.\n:type support_ordering: bool\n:param updated_at: The exact time the\
    \ message was updated.\n:type updated_at: datetime\n"
  type: Class
  uid: azure.mgmt.servicebus.models.TopicCreateOrUpdateParameters
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.TopicResource
  summary: "Description of topic resource.\n\nVariables are only populated by the\
    \ server, and will be ignored when\nsending a request.\n\n:ivar id: Resource Id\n\
    :vartype id: str\n:ivar name: Resource name\n:vartype name: str\n:ivar type: Resource\
    \ type\n:vartype type: str\n:param location: Resource location\n:type location:\
    \ str\n:param tags: Resource tags\n:type tags: dict\n:param accessed_at: Last\
    \ time the message was sent, or a request was\n received, for this topic.\n:type\
    \ accessed_at: datetime\n:param auto_delete_on_idle: TimeSpan idle interval after\
    \ which the topic\n is automatically deleted. The minimum duration is 5 minutes.\n\
    :type auto_delete_on_idle: str\n:param entity_availability_status: Entity availability\
    \ status for the\n topic. Possible values include: 'Available', 'Limited', 'Renaming',\n\
    \ 'Restoring', 'Unknown'\n:type entity_availability_status: str or :class:`EntityAvailabilityStatus\n\
    \ <azure.mgmt.servicebus.models.EntityAvailabilityStatus>`\n:param created_at:\
    \ Exact time the message was created.\n:type created_at: datetime\n:param count_details:\n\
    :type count_details: :class:`MessageCountDetails\n <azure.mgmt.servicebus.models.MessageCountDetails>`\n\
    :param default_message_time_to_live: Default message time to live value.\n This\
    \ is the duration after which the message expires, starting from when\n the message\
    \ is sent to Service Bus. This is the default value used when\n TimeToLive is\
    \ not set on a message itself.\n:type default_message_time_to_live: str\n:param\
    \ duplicate_detection_history_time_window: TimeSpan structure that\n defines the\
    \ duration of the duplicate detection history. The default\n value is 10 minutes.\n\
    :type duplicate_detection_history_time_window: str\n:param enable_batched_operations:\
    \ Value that indicates whether\n server-side batched operations are enabled.\n\
    :type enable_batched_operations: bool\n:param enable_express: Value that indicates\
    \ whether Express Entities are\n enabled. An express topic holds a message in\
    \ memory temporarily before\n writing it to persistent storage.\n:type enable_express:\
    \ bool\n:param enable_partitioning: Value that indicates whether the topic to\
    \ be\n partitioned across multiple message brokers is enabled.\n:type enable_partitioning:\
    \ bool\n:param enable_subscription_partitioning: Value that indicates whether\n\
    \ partitioning is enabled or disabled.\n:type enable_subscription_partitioning:\
    \ bool\n:param filtering_messages_before_publishing: Whether messages should be\n\
    \ filtered before publishing.\n:type filtering_messages_before_publishing: bool\n\
    :param is_anonymous_accessible: Value that indicates whether the message\n is\
    \ accessible anonymously.\n:type is_anonymous_accessible: bool\n:param is_express:\n\
    :type is_express: bool\n:param max_size_in_megabytes: Maximum size of the topic\
    \ in megabytes,\n which is the size of the memory allocated for the topic.\n:type\
    \ max_size_in_megabytes: long\n:param requires_duplicate_detection: Value indicating\
    \ if this topic\n requires duplicate detection.\n:type requires_duplicate_detection:\
    \ bool\n:param size_in_bytes: Size of the topic, in bytes.\n:type size_in_bytes:\
    \ long\n:param status: Enumerates the possible values for the status of a\n messaging\
    \ entity. Possible values include: 'Active', 'Creating',\n 'Deleting', 'Disabled',\
    \ 'ReceiveDisabled', 'Renaming', 'Restoring',\n 'SendDisabled', 'Unknown'\n:type\
    \ status: str or :class:`EntityStatus\n <azure.mgmt.servicebus.models.EntityStatus>`\n\
    :param subscription_count: Number of subscriptions.\n:type subscription_count:\
    \ int\n:param support_ordering: Value that indicates whether the topic supports\n\
    \ ordering.\n:type support_ordering: bool\n:param updated_at: The exact time the\
    \ message was updated.\n:type updated_at: datetime\n"
  type: Class
  uid: azure.mgmt.servicebus.models.TopicResource
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.SubscriptionCreateOrUpdateParameters
  summary: "Parameters supplied to the Create Or Update Subscription operation.\n\n\
    :param location: Subscription data center location.\n:type location: str\n:param\
    \ type: Resource manager type of the resource.\n:type type: str\n:param accessed_at:\
    \ Last time there was a receive request to this\n subscription.\n:type accessed_at:\
    \ datetime\n:param auto_delete_on_idle: TimeSpan idle interval after which the\
    \ topic\n is automatically deleted. The minimum duration is 5 minutes.\n:type\
    \ auto_delete_on_idle: str\n:param count_details:\n:type count_details: :class:`MessageCountDetails\n\
    \ <azure.mgmt.servicebus.models.MessageCountDetails>`\n:param created_at: Exact\
    \ time the message was created.\n:type created_at: datetime\n:param default_message_time_to_live:\
    \ Default message time to live value.\n This is the duration after which the message\
    \ expires, starting from when\n the message is sent to Service Bus. This is the\
    \ default value used when\n TimeToLive is not set on a message itself.\n:type\
    \ default_message_time_to_live: str\n:param dead_lettering_on_filter_evaluation_exceptions:\
    \ Value that\n indicates whether a subscription has dead letter support on filter\n\
    \ evaluation exceptions.\n:type dead_lettering_on_filter_evaluation_exceptions:\
    \ bool\n:param dead_lettering_on_message_expiration: Value that indicates whether\n\
    \ a subscription has dead letter support when a message expires.\n:type dead_lettering_on_message_expiration:\
    \ bool\n:param enable_batched_operations: Value that indicates whether\n server-side\
    \ batched operations are enabled.\n:type enable_batched_operations: bool\n:param\
    \ entity_availability_status: Entity availability status for the\n topic. Possible\
    \ values include: 'Available', 'Limited', 'Renaming',\n 'Restoring', 'Unknown'\n\
    :type entity_availability_status: str or :class:`EntityAvailabilityStatus\n <azure.mgmt.servicebus.models.EntityAvailabilityStatus>`\n\
    :param is_read_only: Value that indicates whether the entity description\n is\
    \ read-only.\n:type is_read_only: bool\n:param lock_duration: The lock duration\
    \ time span for the subscription.\n:type lock_duration: str\n:param max_delivery_count:\
    \ Number of maximum deliveries.\n:type max_delivery_count: int\n:param message_count:\
    \ Number of messages.\n:type message_count: long\n:param requires_session: Value\
    \ indicating if a subscription supports the\n concept of sessions.\n:type requires_session:\
    \ bool\n:param status: Enumerates the possible values for the status of a\n messaging\
    \ entity. Possible values include: 'Active', 'Creating',\n 'Deleting', 'Disabled',\
    \ 'ReceiveDisabled', 'Renaming', 'Restoring',\n 'SendDisabled', 'Unknown'\n:type\
    \ status: str or :class:`EntityStatus\n <azure.mgmt.servicebus.models.EntityStatus>`\n\
    :param updated_at: The exact time the message was updated.\n:type updated_at:\
    \ datetime\n"
  type: Class
  uid: azure.mgmt.servicebus.models.SubscriptionCreateOrUpdateParameters
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.SubscriptionResource
  summary: "Description of subscription resource.\n\nVariables are only populated\
    \ by the server, and will be ignored when\nsending a request.\n\n:ivar id: Resource\
    \ Id\n:vartype id: str\n:ivar name: Resource name\n:vartype name: str\n:ivar type:\
    \ Resource type\n:vartype type: str\n:param location: Resource location\n:type\
    \ location: str\n:param tags: Resource tags\n:type tags: dict\n:param accessed_at:\
    \ Last time there was a receive request to this\n subscription.\n:type accessed_at:\
    \ datetime\n:param auto_delete_on_idle: TimeSpan idle interval after which the\
    \ topic\n is automatically deleted. The minimum duration is 5 minutes.\n:type\
    \ auto_delete_on_idle: str\n:param count_details:\n:type count_details: :class:`MessageCountDetails\n\
    \ <azure.mgmt.servicebus.models.MessageCountDetails>`\n:param created_at: Exact\
    \ time the message was created.\n:type created_at: datetime\n:param default_message_time_to_live:\
    \ Default message time to live value.\n This is the duration after which the message\
    \ expires, starting from when\n the message is sent to Service Bus. This is the\
    \ default value used when\n TimeToLive is not set on a message itself.\n:type\
    \ default_message_time_to_live: str\n:param dead_lettering_on_filter_evaluation_exceptions:\
    \ Value that\n indicates whether a subscription has dead letter support on filter\n\
    \ evaluation exceptions.\n:type dead_lettering_on_filter_evaluation_exceptions:\
    \ bool\n:param dead_lettering_on_message_expiration: Value that indicates whether\n\
    \ a subscription has dead letter support when a message expires.\n:type dead_lettering_on_message_expiration:\
    \ bool\n:param enable_batched_operations: Value that indicates whether\n server-side\
    \ batched operations are enabled.\n:type enable_batched_operations: bool\n:param\
    \ entity_availability_status: Entity availability status for the\n topic. Possible\
    \ values include: 'Available', 'Limited', 'Renaming',\n 'Restoring', 'Unknown'\n\
    :type entity_availability_status: str or :class:`EntityAvailabilityStatus\n <azure.mgmt.servicebus.models.EntityAvailabilityStatus>`\n\
    :param is_read_only: Value that indicates whether the entity description\n is\
    \ read-only.\n:type is_read_only: bool\n:param lock_duration: The lock duration\
    \ time span for the subscription.\n:type lock_duration: str\n:param max_delivery_count:\
    \ Number of maximum deliveries.\n:type max_delivery_count: int\n:param message_count:\
    \ Number of messages.\n:type message_count: long\n:param requires_session: Value\
    \ indicating if a subscription supports the\n concept of sessions.\n:type requires_session:\
    \ bool\n:param status: Enumerates the possible values for the status of a\n messaging\
    \ entity. Possible values include: 'Active', 'Creating',\n 'Deleting', 'Disabled',\
    \ 'ReceiveDisabled', 'Renaming', 'Restoring',\n 'SendDisabled', 'Unknown'\n:type\
    \ status: str or :class:`EntityStatus\n <azure.mgmt.servicebus.models.EntityStatus>`\n\
    :param updated_at: The exact time the message was updated.\n:type updated_at:\
    \ datetime\n"
  type: Class
  uid: azure.mgmt.servicebus.models.SubscriptionResource
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.NamespaceResourcePaged
  summary: 'A paging container for iterating over a list of NamespaceResource object

    '
  type: Class
  uid: azure.mgmt.servicebus.models.NamespaceResourcePaged
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.SharedAccessAuthorizationRuleResourcePaged
  summary: 'A paging container for iterating over a list of SharedAccessAuthorizationRuleResource
    object

    '
  type: Class
  uid: azure.mgmt.servicebus.models.SharedAccessAuthorizationRuleResourcePaged
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.QueueResourcePaged
  summary: 'A paging container for iterating over a list of QueueResource object

    '
  type: Class
  uid: azure.mgmt.servicebus.models.QueueResourcePaged
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.TopicResourcePaged
  summary: 'A paging container for iterating over a list of TopicResource object

    '
  type: Class
  uid: azure.mgmt.servicebus.models.TopicResourcePaged
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.SubscriptionResourcePaged
  summary: 'A paging container for iterating over a list of SubscriptionResource object

    '
  type: Class
  uid: azure.mgmt.servicebus.models.SubscriptionResourcePaged
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.SkuName
  summary: ''
  type: Class
  uid: azure.mgmt.servicebus.models.SkuName
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.SkuTier
  summary: ''
  type: Class
  uid: azure.mgmt.servicebus.models.SkuTier
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.NamespaceState
  summary: ''
  type: Class
  uid: azure.mgmt.servicebus.models.NamespaceState
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.AccessRights
  summary: ''
  type: Class
  uid: azure.mgmt.servicebus.models.AccessRights
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.Policykey
  summary: ''
  type: Class
  uid: azure.mgmt.servicebus.models.Policykey
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.EntityAvailabilityStatus
  summary: ''
  type: Class
  uid: azure.mgmt.servicebus.models.EntityAvailabilityStatus
- _type: class
  children: []
  module: azure.mgmt.servicebus.models
  name: azure.mgmt.servicebus.models.EntityStatus
  summary: ''
  type: Class
  uid: azure.mgmt.servicebus.models.EntityStatus

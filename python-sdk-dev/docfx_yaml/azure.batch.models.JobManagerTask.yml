api_name: []
items:
- _type: class
  children: []
  class: azure.batch.models.JobManagerTask
  fullName: azure.batch.models.JobManagerTask
  inheritance:
  - msrest.serialization.Model
  - builtins.object
  module: azure.batch.models
  name: JobManagerTask
  source:
    id: JobManagerTask
    path: Users/eric/.virtualenvs/sphinx-docfx-yaml/lib/python3.5/site-packages/azure/batch/models/job_manager_task.py
    remote:
      branch: master
      path: Users/eric/.virtualenvs/sphinx-docfx-yaml/lib/python3.5/site-packages/azure/batch/models/job_manager_task.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 15
  summary: "Specifies details of a Job Manager task.\n\n:param id: A string that uniquely\
    \ identifies the Job Manager task.\n:type id: str\n:param display_name: The display\
    \ name of the Job Manager task.\n:type display_name: str\n:param command_line:\
    \ The command line of the Job Manager task. The\n command line does not run under\
    \ a shell, and therefore cannot take\n advantage of shell features such as environment\
    \ variable expansion. If\n you want to take advantage of such features, you should\
    \ invoke the shell\n in the command line, for example using \"cmd /c MyCommand\"\
    \ in Windows or\n \"/bin/sh -c MyCommand\" in Linux.\n:type command_line: str\n\
    :param resource_files: A list of files that the Batch service will\n download\
    \ to the compute node before running the command line.\n:type resource_files:\
    \ list of :class:`ResourceFile\n <azure.batch.models.ResourceFile>`\n:param environment_settings:\
    \ A list of environment variable settings for\n the Job Manager task.\n:type environment_settings:\
    \ list of :class:`EnvironmentSetting\n <azure.batch.models.EnvironmentSetting>`\n\
    :param constraints: Constraints that apply to the Job Manager task.\n:type constraints:\
    \ :class:`TaskConstraints\n <azure.batch.models.TaskConstraints>`\n:param kill_job_on_completion:\
    \ Whether completion of the Job Manager task\n signifies completion of the entire\
    \ job.\n:type kill_job_on_completion: bool\n:param run_elevated: Whether to run\
    \ the Job Manager task in elevated\n mode. The default value is false.\n:type\
    \ run_elevated: bool\n:param run_exclusive: Whether the Job Manager task requires\
    \ exclusive use\n of the compute node where it runs. If true, no other tasks will\
    \ run on\n the same compute node for as long as the Job Manager is running. If\n\
    \ false, other tasks can run simultaneously with the Job Manager on a\n compute\
    \ node. The Job Manager task counts normally against the node's\n concurrent task\
    \ limit, so this is only relevant if the node allows\n multiple concurrent tasks.\n\
    :type run_exclusive: bool\n:param application_package_references: A list of application\
    \ packages\n that the Batch service will deploy to the compute node before running\n\
    \ the command line.\n:type application_package_references: list of\n :class:`ApplicationPackageReference\n\
    \ <azure.batch.models.ApplicationPackageReference>`"
  type: Class
  uid: azure.batch.models.JobManagerTask

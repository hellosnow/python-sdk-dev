api_name: []
items:
- _type: class
  children: []
  class: azure.batch.models.CloudTask
  fullName: azure.batch.models.CloudTask
  inheritance:
  - msrest.serialization.Model
  - builtins.object
  module: azure.batch.models
  name: CloudTask
  source:
    id: CloudTask
    path: Users/eric/.virtualenvs/sphinx-docfx-yaml/lib/python3.5/site-packages/azure/batch/models/cloud_task.py
    remote:
      branch: master
      path: Users/eric/.virtualenvs/sphinx-docfx-yaml/lib/python3.5/site-packages/azure/batch/models/cloud_task.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 15
  summary: "An Azure Batch task.\n\n:param id: A string that uniquely identifies the\
    \ task within the job. The\n id can contain any combination of alphanumeric characters\
    \ including\n hyphens and underscores, and cannot contain more than 64 characters.\
    \ It\n is common to use a GUID for the id.\n:type id: str\n:param display_name:\
    \ A display name for the task.\n:type display_name: str\n:param url: The URL of\
    \ the task.\n:type url: str\n:param e_tag: The ETag of the task.\n:type e_tag:\
    \ str\n:param last_modified: The last modified time of the task.\n:type last_modified:\
    \ datetime\n:param creation_time: The creation time of the task.\n:type creation_time:\
    \ datetime\n:param exit_conditions: How the Batch service should respond when\
    \ the\n task completes.\n:type exit_conditions: :class:`ExitConditions\n <azure.batch.models.ExitConditions>`\n\
    :param state: The current state of the task. Possible values include:\n 'active',\
    \ 'preparing', 'running', 'completed'\n:type state: str or :class:`TaskState <azure.batch.models.TaskState>`\n\
    :param state_transition_time: The time at which the task entered its\n current\
    \ state.\n:type state_transition_time: datetime\n:param previous_state: The previous\
    \ state of the task. This property is\n not set if the task is in its initial\
    \ Active state. Possible values\n include: 'active', 'preparing', 'running', 'completed'\n\
    :type previous_state: str or :class:`TaskState\n <azure.batch.models.TaskState>`\n\
    :param previous_state_transition_time: The time at which the task entered\n its\
    \ previous state. This property is not set if the task is in its\n initial Active\
    \ state.\n:type previous_state_transition_time: datetime\n:param command_line:\
    \ The command line of the task. For multi-instance\n tasks, the command line is\
    \ executed on the primary subtask after all the\n subtasks have finished executing\
    \ the coordianation command line. The\n command line does not run under a shell,\
    \ and therefore cannot take\n advantage of shell features such as environment\
    \ variable expansion. If\n you want to take advantage of such features, you should\
    \ invoke the shell\n in the command line, for example using \"cmd /c MyCommand\"\
    \ in Windows or\n \"/bin/sh -c MyCommand\" in Linux.\n:type command_line: str\n\
    :param resource_files: A list of files that the Batch service will\n download\
    \ to the compute node before running the command line. For\n multi-instance tasks,\
    \ the resource files will only be downloaded to the\n compute node on which the\
    \ primary subtask is executed.\n:type resource_files: list of :class:`ResourceFile\n\
    \ <azure.batch.models.ResourceFile>`\n:param environment_settings: A list of environment\
    \ variable settings for\n the task.\n:type environment_settings: list of :class:`EnvironmentSetting\n\
    \ <azure.batch.models.EnvironmentSetting>`\n:param affinity_info: A locality hint\
    \ that can be used by the Batch\n service to select a compute node on which to\
    \ start the new task.\n:type affinity_info: :class:`AffinityInformation\n <azure.batch.models.AffinityInformation>`\n\
    :param constraints: The execution constraints that apply to this task.\n:type\
    \ constraints: :class:`TaskConstraints\n <azure.batch.models.TaskConstraints>`\n\
    :param run_elevated: Whether to run the task in elevated mode.\n:type run_elevated:\
    \ bool\n:param execution_info: Information about the execution of the task.\n\
    :type execution_info: :class:`TaskExecutionInformation\n <azure.batch.models.TaskExecutionInformation>`\n\
    :param node_info: Information about the compute node on which the task\n ran.\n\
    :type node_info: :class:`ComputeNodeInformation\n <azure.batch.models.ComputeNodeInformation>`\n\
    :param multi_instance_settings: Information about how to run the\n multi-instance\
    \ task.\n:type multi_instance_settings: :class:`MultiInstanceSettings\n <azure.batch.models.MultiInstanceSettings>`\n\
    :param stats: Resource usage statistics for the task.\n:type stats: :class:`TaskStatistics\
    \ <azure.batch.models.TaskStatistics>`\n:param depends_on: Any dependencies this\
    \ task has.\n:type depends_on: :class:`TaskDependencies\n <azure.batch.models.TaskDependencies>`\n\
    :param application_package_references: A list of application packages\n that the\
    \ Batch service will deploy to the compute node before running\n the command line.\n\
    :type application_package_references: list of\n :class:`ApplicationPackageReference\n\
    \ <azure.batch.models.ApplicationPackageReference>`"
  type: Class
  uid: azure.batch.models.CloudTask

api_name: []
items:
- _type: class
  children:
  - azure.mgmt.media.operations.MediaServiceOperations.check_name_availability
  - azure.mgmt.media.operations.MediaServiceOperations.create
  - azure.mgmt.media.operations.MediaServiceOperations.delete
  - azure.mgmt.media.operations.MediaServiceOperations.get
  - azure.mgmt.media.operations.MediaServiceOperations.list_by_resource_group
  - azure.mgmt.media.operations.MediaServiceOperations.list_keys
  - azure.mgmt.media.operations.MediaServiceOperations.regenerate_key
  - azure.mgmt.media.operations.MediaServiceOperations.sync_storage_keys
  - azure.mgmt.media.operations.MediaServiceOperations.update
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations
  inheritance:
  - builtins.object
  module: azure.mgmt.media.operations
  name: MediaServiceOperations
  source:
    id: MediaServiceOperations
    path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 18
  summary: 'MediaServiceOperations operations.


    :param client: Client for service requests.

    :param config: Configuration of service client.

    :param serializer: An object model serializer.

    :param deserializer: An objec model deserializer.'
  type: Class
  uid: azure.mgmt.media.operations.MediaServiceOperations
- _type: method
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations.check_name_availability
  module: azure.mgmt.media.operations
  name: check_name_availability
  source:
    id: check_name_availability
    path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 35
  summary: "Checks whether the Media Service resource name is available. The name\n\
    must be globally unique.\n\n:param name: The name of the resource. A name must\
    \ be globally unique.\n:type name: str\n:param dict custom_headers: headers that\
    \ will be added to the request\n:param bool raw: returns the direct response alongside\
    \ the\n deserialized response\n:param operation_config: :ref:`Operation configuration\n\
    \ overrides<msrest:optionsforoperations>`.\n:rtype: :class:`CheckNameAvailabilityOutput\n\
    \ <azure.mgmt.media.models.CheckNameAvailabilityOutput>`\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises:\n :class:`ApiErrorException<azure.mgmt.media.models.ApiErrorException>`"
  type: Method
  uid: azure.mgmt.media.operations.MediaServiceOperations.check_name_availability
- _type: method
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations.create
  module: azure.mgmt.media.operations
  name: create
  source:
    id: create
    path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 226
  summary: "Creates a Media Service.\n\n:param resource_group_name: Name of the resource\
    \ group within the\n Azure subscription.\n:type resource_group_name: str\n:param\
    \ media_service_name: Name of the Media Service.\n:type media_service_name: str\n\
    :param media_service: Media Service properties needed for creation.\n:type media_service:\
    \ :class:`MediaService\n <azure.mgmt.media.models.MediaService>`\n:param dict\
    \ custom_headers: headers that will be added to the request\n:param bool raw:\
    \ returns the direct response alongside the\n deserialized response\n:param operation_config:\
    \ :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n:rtype:\
    \ :class:`MediaService <azure.mgmt.media.models.MediaService>`\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises:\n :class:`ApiErrorException<azure.mgmt.media.models.ApiErrorException>`"
  type: Method
  uid: azure.mgmt.media.operations.MediaServiceOperations.create
- _type: method
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations.delete
  module: azure.mgmt.media.operations
  name: delete
  source:
    id: delete
    path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 294
  summary: "Deletes a Media Service.\n\n:param resource_group_name: Name of the resource\
    \ group within the\n Azure subscription.\n:type resource_group_name: str\n:param\
    \ media_service_name: Name of the Media Service.\n:type media_service_name: str\n\
    :param dict custom_headers: headers that will be added to the request\n:param\
    \ bool raw: returns the direct response alongside the\n deserialized response\n\
    :param operation_config: :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n\
    :rtype: None\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises:\n :class:`ApiErrorException<azure.mgmt.media.models.ApiErrorException>`"
  type: Method
  uid: azure.mgmt.media.operations.MediaServiceOperations.delete
- _type: method
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations.get
  module: azure.mgmt.media.operations
  name: get
  source:
    id: get
    path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 165
  summary: "Gets a Media Service.\n\n:param resource_group_name: Name of the resource\
    \ group within the\n Azure subscription.\n:type resource_group_name: str\n:param\
    \ media_service_name: Name of the Media Service.\n:type media_service_name: str\n\
    :param dict custom_headers: headers that will be added to the request\n:param\
    \ bool raw: returns the direct response alongside the\n deserialized response\n\
    :param operation_config: :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n\
    :rtype: :class:`MediaService <azure.mgmt.media.models.MediaService>`\n:rtype:\
    \ :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n if raw=true\n\
    :raises:\n :class:`ApiErrorException<azure.mgmt.media.models.ApiErrorException>`"
  type: Method
  uid: azure.mgmt.media.operations.MediaServiceOperations.get
- _type: method
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations.list_by_resource_group
  module: azure.mgmt.media.operations
  name: list_by_resource_group
  source:
    id: list_by_resource_group
    path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 99
  summary: "Lists all of the Media Services in a resource group.\n\n:param resource_group_name:\
    \ Name of the resource group within the\n Azure subscription.\n:type resource_group_name:\
    \ str\n:param dict custom_headers: headers that will be added to the request\n\
    :param bool raw: returns the direct response alongside the\n deserialized response\n\
    :param operation_config: :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n\
    :rtype: :class:`MediaServicePaged\n <azure.mgmt.media.models.MediaServicePaged>`\n\
    :raises:\n :class:`ApiErrorException<azure.mgmt.media.models.ApiErrorException>`"
  type: Method
  uid: azure.mgmt.media.operations.MediaServiceOperations.list_by_resource_group
- _type: method
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations.list_keys
  module: azure.mgmt.media.operations
  name: list_keys
  source:
    id: list_keys
    path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 489
  summary: "Lists the keys for a Media Service.\n\n:param resource_group_name: Name\
    \ of the resource group within the\n Azure subscription.\n:type resource_group_name:\
    \ str\n:param media_service_name: Name of the Media Service.\n:type media_service_name:\
    \ str\n:param dict custom_headers: headers that will be added to the request\n\
    :param bool raw: returns the direct response alongside the\n deserialized response\n\
    :param operation_config: :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n\
    :rtype: :class:`ServiceKeys <azure.mgmt.media.models.ServiceKeys>`\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises:\n :class:`ApiErrorException<azure.mgmt.media.models.ApiErrorException>`"
  type: Method
  uid: azure.mgmt.media.operations.MediaServiceOperations.list_keys
- _type: method
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations.regenerate_key
  module: azure.mgmt.media.operations
  name: regenerate_key
  source:
    id: regenerate_key
    path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 416
  summary: "Regenerates a primary or secondary key for a Media Service.\n\n:param\
    \ resource_group_name: Name of the resource group within the\n Azure subscription.\n\
    :type resource_group_name: str\n:param media_service_name: Name of the Media Service.\n\
    :type media_service_name: str\n:param key_type: The keyType indicating which key\
    \ you want to\n regenerate, Primary or Secondary. Possible values include: 'Primary',\n\
    \ 'Secondary'\n:type key_type: str or :class:`KeyType\n <azure.mgmt.media.models.KeyType>`\n\
    :param dict custom_headers: headers that will be added to the request\n:param\
    \ bool raw: returns the direct response alongside the\n deserialized response\n\
    :param operation_config: :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n\
    :rtype: :class:`RegenerateKeyOutput\n <azure.mgmt.media.models.RegenerateKeyOutput>`\n\
    :rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n if raw=true\n\
    :raises:\n :class:`ApiErrorException<azure.mgmt.media.models.ApiErrorException>`"
  type: Method
  uid: azure.mgmt.media.operations.MediaServiceOperations.regenerate_key
- _type: method
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations.sync_storage_keys
  module: azure.mgmt.media.operations
  name: sync_storage_keys
  source:
    id: sync_storage_keys
    path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 550
  summary: "Synchronizes storage account keys for a storage account associated with\n\
    the Media Service account.\n\n:param resource_group_name: Name of the resource\
    \ group within the\n Azure subscription.\n:type resource_group_name: str\n:param\
    \ media_service_name: Name of the Media Service.\n:type media_service_name: str\n\
    :param id: The id of the storage account resource.\n:type id: str\n:param dict\
    \ custom_headers: headers that will be added to the request\n:param bool raw:\
    \ returns the direct response alongside the\n deserialized response\n:param operation_config:\
    \ :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n:rtype:\
    \ None\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises:\n :class:`ApiErrorException<azure.mgmt.media.models.ApiErrorException>`"
  type: Method
  uid: azure.mgmt.media.operations.MediaServiceOperations.sync_storage_keys
- _type: method
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations.update
  module: azure.mgmt.media.operations
  name: update
  source:
    id: update
    path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media/azure/mgmt/media/operations/media_service_operations.py
      repo: git@github.com:ericholscher/azure-sdk-for-python.git
    startLine: 348
  summary: "Updates a Media Service.\n\n:param resource_group_name: Name of the resource\
    \ group within the\n Azure subscription.\n:type resource_group_name: str\n:param\
    \ media_service_name: Name of the Media Service.\n:type media_service_name: str\n\
    :param media_service: Media Service properties needed for update.\n:type media_service:\
    \ :class:`MediaService\n <azure.mgmt.media.models.MediaService>`\n:param dict\
    \ custom_headers: headers that will be added to the request\n:param bool raw:\
    \ returns the direct response alongside the\n deserialized response\n:param operation_config:\
    \ :ref:`Operation configuration\n overrides<msrest:optionsforoperations>`.\n:rtype:\
    \ :class:`MediaService <azure.mgmt.media.models.MediaService>`\n:rtype: :class:`ClientRawResponse<msrest.pipeline.ClientRawResponse>`\n\
    \ if raw=true\n:raises:\n :class:`ApiErrorException<azure.mgmt.media.models.ApiErrorException>`"
  type: Method
  uid: azure.mgmt.media.operations.MediaServiceOperations.update

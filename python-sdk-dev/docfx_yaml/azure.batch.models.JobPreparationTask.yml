api_name: []
items:
- _type: class
  children: []
  class: azure.batch.models.JobPreparationTask
  fullName: azure.batch.models.JobPreparationTask
  inheritance:
  - msrest.serialization.Model
  - builtins.object
  module: azure.batch.models
  name: JobPreparationTask
  source:
    id: JobPreparationTask
    path: Users/eric/.virtualenvs/sphinx-docfx-yaml/lib/python3.5/site-packages/azure/batch/models/job_preparation_task.py
    remote:
      branch: master
      path: Users/eric/.virtualenvs/sphinx-docfx-yaml/lib/python3.5/site-packages/azure/batch/models/job_preparation_task.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 15
  summary: "A Job Preparation task to run before any tasks of the job on any given\n\
    compute node.\n\n:param id: A string that uniquely identifies the job preparation\
    \ task\n within the job. The id can contain any combination of alphanumeric\n\
    \ characters including hyphens and underscores and cannot contain more\n than\
    \ 64 characters.\n:type id: str\n:param command_line: The command line of the\
    \ Job Preparation task. The\n command line does not run under a shell, and therefore\
    \ cannot take\n advantage of shell features such as environment variable expansion.\
    \ If\n you want to take advantage of such features, you should invoke the shell\n\
    \ in the command line, for example using \"cmd /c MyCommand\" in Windows or\n\
    \ \"/bin/sh -c MyCommand\" in Linux.\n:type command_line: str\n:param resource_files:\
    \ A list of files that the Batch service will\n download to the compute node before\
    \ running the command line.\n:type resource_files: list of :class:`ResourceFile\n\
    \ <azure.batch.models.ResourceFile>`\n:param environment_settings: A list of environment\
    \ variable settings for\n the Job Preparation task.\n:type environment_settings:\
    \ list of :class:`EnvironmentSetting\n <azure.batch.models.EnvironmentSetting>`\n\
    :param constraints: Constraints that apply to the Job Preparation task.\n:type\
    \ constraints: :class:`TaskConstraints\n <azure.batch.models.TaskConstraints>`\n\
    :param wait_for_success: Whether the Batch service should wait for the\n Job Preparation\
    \ task to complete successfully before scheduling any\n other tasks of the job\
    \ on the compute node.\n:type wait_for_success: bool\n:param run_elevated: Whether\
    \ to run the Job Preparation task in elevated\n mode. The default value is false.\n\
    :type run_elevated: bool\n:param rerun_on_node_reboot_after_success: Whether the\
    \ Batch service\n should rerun the Job Preparation task after a compute node reboots.\
    \ Note\n that the Job Preparation task should still be written to be idempotent\n\
    \ because it can be rerun if the compute node is rebooted while Job\n Preparation\
    \ task is still running. The default value is true.\n:type rerun_on_node_reboot_after_success:\
    \ bool"
  type: Class
  uid: azure.batch.models.JobPreparationTask

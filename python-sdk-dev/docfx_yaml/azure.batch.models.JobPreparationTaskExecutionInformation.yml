api_name: []
items:
- _type: class
  children: []
  class: azure.batch.models.JobPreparationTaskExecutionInformation
  fullName: azure.batch.models.JobPreparationTaskExecutionInformation
  inheritance:
  - msrest.serialization.Model
  - builtins.object
  module: azure.batch.models
  name: JobPreparationTaskExecutionInformation
  source:
    id: JobPreparationTaskExecutionInformation
    path: Users/eric/.virtualenvs/sphinx-docfx-yaml/lib/python3.5/site-packages/azure/batch/models/job_preparation_task_execution_information.py
    remote:
      branch: master
      path: Users/eric/.virtualenvs/sphinx-docfx-yaml/lib/python3.5/site-packages/azure/batch/models/job_preparation_task_execution_information.py
      repo: https://github.com/Azure/azure-sdk-for-python/
    startLine: 15
  summary: "Contains information about the execution of a Job Preparation task on\
    \ a\ncompute node.\n\n:param start_time: The time at which the task started running.\
    \ Note that\n every time the task is restarted, this value is updated.\n:type\
    \ start_time: datetime\n:param end_time: The time at which the Job Preparation\
    \ task completed.\n This property is set only if the task is in the Completed\
    \ state.\n:type end_time: datetime\n:param state: The current state of the Job\
    \ Preparation task. Possible\n values include: 'running', 'completed'\n:type state:\
    \ str or :class:`JobPreparationTaskState\n <azure.batch.models.JobPreparationTaskState>`\n\
    :param task_root_directory: The root directory of the Job Preparation\n task on\
    \ the compute node. You can use this path to retrieve files\n created by the task,\
    \ such as log files.\n:type task_root_directory: str\n:param task_root_directory_url:\
    \ The URL to the root directory of the Job\n Preparation task on the compute node.\n\
    :type task_root_directory_url: str\n:param exit_code: The exit code of the program\
    \ specified on the task\n command line. This parameter is returned only if the\
    \ task is in the\n completed state. The exit code for a process reflects the specific\n\
    \ convention implemented by the application developer for that process. If\n you\
    \ use the exit code value to make decisions in your code, be sure that\n you know\
    \ the exit code convention used by the application process. Note\n that the exit\
    \ code may also be generated by the compute node operating\n system, such as when\
    \ a process is forcibly terminated.\n:type exit_code: int\n:param scheduling_error:\
    \ The error encountered by the Batch service when\n starting the task.\n:type\
    \ scheduling_error: :class:`TaskSchedulingError\n <azure.batch.models.TaskSchedulingError>`\n\
    :param retry_count: The number of times the task has been retried by the\n Batch\
    \ service. Every time the task exits with a non-zero exit code, it\n is deemed\
    \ a task failure. The Batch service will retry the task up to\n the limit specified\
    \ by the constraints.\n:type retry_count: int\n:param last_retry_time: The most\
    \ recent time at which a retry of the Job\n Preparation task started running.\
    \ This property is set only if the task\n was retried (i.e. retryCount is nonzero).\n\
    :type last_retry_time: datetime"
  type: Class
  uid: azure.batch.models.JobPreparationTaskExecutionInformation
